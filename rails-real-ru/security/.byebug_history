exit
auth_token[:value]
auth_token
exit
response
response.body
html
token_tag
continue
exit
kio
coo
err
exit
err.to_s
err.to-s
coo
kio.class
coo.class
err.class
kio
kioo
coo
exit
err.split('\; ')
err
exit
errr
errr=request['Cookie'].split('\; ')[0]
request['Cookie'].split('\; ')[0]
request['Cookie'].split('\; ')
request['Cookie'].split()
request['Cookie']
response.header
response.response.header
response.response.header.raw()
response.response.headers.raw()
response.response.raw()
response.response
response
request['Cookie']
equest['Cookie']
continue
exit
request['X-CSRF-Token']
request.pretty_inspect
request.methods
request.header
request.headers
request['Cookie']
request.body
request
continue
exit
page.at_css('form#new_user').at_css('input[type="password"]')['name']
page.at_css('form#new_user')..at_css('input[type="password"]')['name']
page.at_css('form#new_user').at_css('input[type="email"]')['name']
page.at_css('form#new_user'.at_css('input[type="email"]')['name']
page.at_css('form#new_user')['action'].at_css('input[type="email"]')['name']
page.at_css('meta[name="csrf-token"]')['content']
page['action']
page
URI(page.at_css('form')['action'])
URI(page.at_css('form#new_user')['action'])
page.at_css('form#new_user')['action']
page.at_css('form#new_user')
page.at_css('form')
register_form
continue
mooki
continue
response.response['set-cookie'].split('\; ')[0]
cookie
continue
exit
require 'net'
require 'net/http'
http
Net::HTTP.post
Net::HTTP.methods
Net::HTTP.request
Net::HTTP
Net::http
http:
HTTP
http
continue
cookie
continue
cookie
response.response['set-cookie'].split('\; ')[0]
cookie
exit
response.response['set-cookie'].split('\; ')[0]
cookie
exit
cookie
continue
request['Cookie']
request['set-cookie']
cookie
request.param
request.params
request.body
request
exit
cookie.split('\; ')exit
cookie.split('\; ')
cookie.split('\;')
cookie.split('/;')
cookie.split(';')
cookie.split('')
cookie.split()
cookie.split
cookie = response.response['set-cookie']
cookie
exit
response.response['set-cookie'].split('; ')
html
response.response['set-cookie'].split('; ')
''.split
response.response['set-cookie'].split(';')
response.response['set-cookie'].split(;)
response.response['set-cookie'].split
response.response['set-cookie'].class
response.response['set-cookie'].split("; ")
response.response['set-cookie'].split('; ')
response.response['set-cookie'].split('; ')[0]
response.response['set-cookie'].split(';')[0]
response.response['set-cookie']
response.response
response
exit
учше
token = doc.at('meta[name="csrf-token"]')['content']
token_tag = doc.at('meta[name="csrf-token"]')
token_tag = doc.at(meta[name="csrf-token"]')
doc.parse
doc.each do |el| p el end
doc.each do |el|
doc.xpath('//name')
token_tag = doc.at('meta[@name="content"]')
token_tag = doc.at('meta[@name="token"]')
token_tag = doc.at('input[@name="token"]')
exit
doc[1]
doc[0]
doc.css('content')
doc.css("#csrf-param")
doc.css("csrf-param")
doc.css("csrf-params")
doc.css("csrf-tag")
doc.css("#csrf-tag")
doc.css("#csrf")
doc.css(#csrf)
doc.parse
doc.url
doc.uri
exit
doc.find 'csrf-param'
doc.find
doc.children
doc.name
doc.pretty_inspect
doc.methods
doc.kwattr_values
doc.kwatrr_values
doc.kwatrr
doc.keys
doc.methods
doc.tags
doc.css
doc['name']
doc.count
doc
c
doc.class
doc[:headers]
doc
